 { //Creating an abstract class called Vehicle with attributes and methods
abstract class Vehicle {
    //Private attributes
    -String brand
    -int year
    -String color
    -int mileage

    //Protected attribute
    #int price

    //Constructor with brand, year, and color parameters
    +Vehicle(String brand, int year, String color) 

    //Abstract method calculatePrice
    +abstract int calculatePrice()

    //Getter and Setter methods for mileage attribute
    +int getMileage()
    +void setMileage(int mileage)

    //Getter and Setter methods for price attribute
    +int getPrice()
    +void setPrice(int price)

    //Method to print vehicle information
    +void printInfo()
}

//Creating a subclass of Vehicle called Car
class Car extends Vehicle {
    //Private attribute
    -boolean hasSpoiler

    //Constructor with brand, year, color, and hasSpoiler parameters
    +Car(String brand, int year, String color, boolean hasSpoiler)

    //Overriding calculatePrice method from Vehicle class
    +int calculatePrice() 

    //Overriding printInfo method from Vehicle class
    +void printInfo()
}

//Creating a subclass of Vehicle called Motorcycle
class Motorcycle extends Vehicle {
    //Private attribute
    -boolean hasSidecar

    //Constructor with brand, year, color, and hasSidecar parameters
    +Motorcycle(String brand, int year, String color, boolean hasSidecar)

    //Overriding calculatePrice method from Vehicle class
    +int calculatePrice() 

    //Overriding printInfo method from Vehicle class
    +void printInfo()
}

Vehicle <|-- Car
Vehicle <|-- Motorcycle

Vehicle "1" o-- "1" Vehicle  : has-a
Car "1" o-- "1" Vehicle : is-a
Motorcycle "1" o-- "1" Vehicle : is-a

class Vehicle {
    -String brand
    -int year
    -String color
    -int mileage
    #int price
    +Vehicle(String brand, int year, String color)
    +abstract int calculatePrice()
    +int getMileage()
    +void setMileage(int mileage)
    +int getPrice()
    +void setPrice(int price)
    +void printInfo()
}

class Car {
    -boolean hasSpoiler
    +Car(String brand, int year, String color, boolean hasSpoiler)
    +int calculatePrice()
    +void printInfo()
}

class Motorcycle {
    -boolean hasSidecar
    +Motorcycle(String brand, int year, String color, boolean hasSidecar)
    +int calculatePrice()
    +void printInfo()
}

Vehicle <|-- Car
Vehicle <|-- Motorcycle