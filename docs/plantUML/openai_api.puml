@startuml
title openai_api

class openai {
    + ChatCompletion.create()
}

class load_dotenv {
    + Load environment variables from .env file
}

class os {
    + getenv()
}

class FlaskApp {
    + Initialize the app
    + Configure logging
    + Define routes
    + Run the app
}

class Logger {
    + Log to file
    + Log to console
}

class Request {
    + Parse JSON data
    + Validate parameters
    + Process request
    + Return response
}

class JSONData {
    + Extract data fields
}

openai --> load_dotenv : Uses
os --> openai : Uses

FlaskApp --> Logger : Uses
FlaskApp --> Request : Uses
Request --> JSONData : Uses

note right of Request
  Request handles:
  - Missing parameters
  - Repository cloning
  - Code retrieval
  - UML content generation
end note

@enduml
